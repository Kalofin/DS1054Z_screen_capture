name: Build stand-alone executables (Multi-Platform)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        default: ''
        type: string
  push:
    branches:
      - master
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Update pip and install common requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: install requirements for Windows
      if: runner.os == 'Windows'
      run: |
        pip install -r requirements_windows.txt

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile OscScreenGrabLAN.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: executable-${{runner.os}}
        path: dist/


  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag || github.ref_name }}
        release_name: Release ${{ github.event.inputs.tag || github.ref_name }}
        body: |
          ## What's Changed
          - Built executables for all platforms using PyInstaller.
          - Download the appropriate ZIP for your OS below.
        draft: false
        prerelease: false

    - name: Zip and Upload Windows Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/executable-Windows/dist/OscScreenGrabLAN.exe
        asset_name: DS1054Z_Windows-${{ github.event.inputs.tag || github.ref_name }}.exe
        asset_content_type: application/octet-stream

    - name: Zip and Upload Linux Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/executable-Linux/dist/OscScreenGrabLAN
        asset_name: DS1054Z_Linux-${{ github.event.inputs.tag || github.ref_name }}
        asset_content_type: application/octet-stream

    - name: Zip and Upload macOS Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/executable-macOS/dist/OscScreenGrabLAN
        asset_name: DS1054Z_macOS-${{ github.event.inputs.tag || github.ref_name }}
        asset_content_type: application/octet-stream
